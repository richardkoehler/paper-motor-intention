[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [
  {name = "Richard M. KÃ¶hler", email = "koehler.richard@charite.de"},
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
  "mne>=1.0",
  "psutil",
  "pte",
  "pte-decode",
  "pte-stats",
  "py_neuromodulation",
  "pyqt5",
  "pyvistaqt",
  "qdarkstyle",
  "rtree",
  "trimesh",
  "pluggy>=1.3",
  "pytask>=0.4",
]
description = "Code used for investigation of motor intention in Parkinson's disease patients."
dynamic = ["version"]
name = "motor-intention"
readme = "README.md"
requires-python = "~=3.10"

[project.optional-dependencies]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]

[project.urls]
"Bug Tracker" = "https://github.com/richardkoehler/paper-motor-intention/issues"
Changelog = "https://github.com/richardkoehler/paper-motor-intention/releases"
Discussions = "https://github.com/richardkoehler/paper-motor-intention/discussions"
Homepage = "https://github.com/richardkoehler/paper-motor-intention"

[tool.hatch]
build.hooks.vcs.version-file = "src/motor_intention/_version.py"
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]
version.source = "vcs"

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
minversion = "6.0"
testpaths = [
  "tests",
]
xfail_strict = true

[tool.coverage]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]
run.source = ["motor_intention"]

[tool.mypy]
disallow_incomplete_defs = false
disallow_untyped_defs = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
files = ["src", "tests"]
ignore_missing_imports = true
python_version = "3.10"
show_error_codes = true
strict = true
warn_unreachable = true
warn_unused_configs = true

[[tool.mypy.overrides]]
disallow_incomplete_defs = true
disallow_untyped_defs = true
module = "motor_intention.*"

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B", # flake8-bugbear
  "I", # isort
  "ARG", # flake8-unused-arguments
  "C4", # flake8-comprehensions
  "EM", # flake8-errmsg
  "ICN", # flake8-import-conventions
  "G", # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL", # pylint
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP", # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy specific rules
  "PD", # pandas-vet
]
ignore = [
  "PLR", # Design related pylint codes
  "T201", # print() function
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["T20"]
"tests/**" = ["T20"]

[tool.pylint]
ignore-paths = [".*/_version.py"]
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]
py-version = "3.10"
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
